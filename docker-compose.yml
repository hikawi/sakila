name: awad

volumes:
  mariadb:
    name: awad-mysql
  opensearch-data:
    name: awad-opensearch

networks:
  nw:
    driver: bridge
    name: awad-nw

services:
  mysql:
    image: mariadb:12
    hostname: mysql
    container_name: awad-mysql
    networks:
      - nw
    environment:
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./sakila-mysql.sql:/docker-entrypoint-initdb.d/init.sql
      - mariadb:/var/lib/mysql

  week1:
    image: cosmtrek/air
    container_name: awad-week1
    hostname: awad-week1
    profiles: ["week1"]
    networks: ["nw"]
    working_dir: /app
    ports:
      - 3000:80
    volumes:
      - ./week1:/app
      - /app/tmp
    environment:
      MYSQL_DSN: ${MYSQL_DSN}
    depends_on:
      mysql:
        condition: service_healthy

  week2:
    image: cosmtrek/air
    container_name: awad-week2
    hostname: awad-week2
    profiles: ["week2"]
    networks: ["nw"]
    working_dir: /app
    ports:
      - 3001:80
    volumes:
      - ./week2:/app
      - /app/tmp
    environment:
      MYSQL_DSN: ${MYSQL_DSN}
    depends_on:
      mysql:
        condition: service_healthy

  # Taken from OpenSearch's Docker example file for local development
  week3-opensearch:
    image: opensearchproject/opensearch
    container_name: awad-week3-opensearch-node1
    hostname: awad-week3-opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1 # Nodes to look for when discovering the cluster
      - cluster.initial_master_nodes=opensearch-node1
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables Security plugin
    profiles: ["week3"]
    networks: ["nw"]
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    healthcheck:
      test: ["CMD", "curl", "-fsSL", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  # Taken from OpenSearch's Docker example file
  week3-opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards
    container_name: awad-week3-opensearch-dashboard
    ports:
      - 5601:5601
    profiles: ["week3"]
    networks: ["nw"]
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      - 'OPENSEARCH_HOSTS=["http://awad-week3-opensearch-node1:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards
    healthcheck:
      test: ["CMD", "curl", "-fsSL", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      week3-opensearch:
        condition: service_healthy

  week3-fluentbit:
    image: fluent/fluent-bit
    container_name: awad-week3-fluentbit
    hostname: awad-week3-fluentbit
    profiles: ["week3"]
    networks: ["nw"]
    ports:
      - 8888:8888
    volumes:
      - ./week3/fluent-bit.yaml:/fluent-bit/fluent-bit.yaml
      - ./week3/log:/var/log/week3
    command: /fluent-bit/bin/fluent-bit -c /fluent-bit/fluent-bit.yaml
    depends_on:
      week3-opensearch:
        condition: service_healthy

  week3:
    image: cosmtrek/air
    container_name: awad-week3
    hostname: awad-week3
    profiles: ["week3"]
    networks: ["nw"]
    working_dir: /app
    command: 'air --build.exclude_dir "log,build"'
    ports:
      - 3002:80
    volumes:
      - ./week3:/app
      - ./week3/log:/var/log/week3
      - /app/tmp
    environment:
      MYSQL_DSN: ${MYSQL_DSN}
      FLUENTBIT_URL: ${FLUENTBIT_URL}
    depends_on:
      mysql:
        condition: service_healthy
      week3-opensearch:
        condition: service_healthy
      week3-opensearch-dashboards:
        condition: service_healthy
      week3-fluentbit:
        condition: service_healthy

  week4-mtls:
    image: cosmtrek/air
    container_name: awad-week4-mtls
    hostname: awad-week4-mtls
    profiles: ["week4-mtls"]
    networks: ["nw"]
    working_dir: /app
    ports:
      - 3003:443
    volumes:
      - ./week4-mtls:/app
      - /app/tmp
    environment:
      MYSQL_DSN: ${MYSQL_DSN}
    depends_on:
      mysql:
        condition: service_healthy

  week4-apitoken:
    image: cosmtrek/air
    container_name: awad-wee4-apitoken
    hostname: awad-week4-apitoken
    profiles: ["week4-apitoken"]
    networks: ["nw"]
    working_dir: /app
    ports:
      - 3004:80
    volumes:
      - ./week4-apitoken:/app
      - /app/tmp
    environment:
      MYSQL_DSN: ${MYSQL_DSN}
    depends_on:
      mysql:
        condition: service_healthy

  week4-jwt:
    image: cosmtrek/air
    container_name: awad-week4-jwt
    hostname: awad-week4-jwt
    profiles: ["week4-jwt"]
    networks: ["nw"]
    working_dir: /app
    ports:
      - 3005:80
    volumes:
      - ./week4-jwt:/app
      - /app/tmp
    environment:
      MYSQL_DSN: ${MYSQL_DSN}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
